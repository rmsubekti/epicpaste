basePath: /v1
definitions:
  handlers.Emailpayload:
    properties:
      email:
        type: string
    type: object
  handlers.LoginResponse:
    properties:
      expire_days:
        type: integer
      id:
        type: string
      signed_date:
        type: string
      token:
        type: string
      user:
        $ref: '#/definitions/model.User'
    type: object
  handlers.Response:
    properties:
      data: {}
      message:
        type: string
      status:
        type: string
    type: object
  model.Account:
    properties:
      email:
        description: |-
          must be valid email address
          cannot start with or end with non alphanumeric
          charachter (`.` and `-`) are allowed
        type: string
      password:
        description: any string character
        type: string
      username:
        description: any combination of alphanumeric charachter allowed
        type: string
    type: object
  model.Category:
    properties:
      name:
        type: string
    type: object
  model.ChangePassword:
    properties:
      confirm:
        type: string
      current:
        type: string
      new:
        type: string
    type: object
  model.Paste:
    properties:
      category:
        $ref: '#/definitions/model.Category'
      content:
        type: string
      id:
        type: string
      public:
        type: boolean
      syntax:
        $ref: '#/definitions/model.Syntax'
      tag:
        items:
          $ref: '#/definitions/model.Tag'
        type: array
      title:
        type: string
    type: object
  model.Syntax:
    properties:
      name:
        type: string
    type: object
  model.Tag:
    properties:
      name:
        type: string
    type: object
  model.User:
    properties:
      name:
        type: string
      username:
        type: string
    type: object
  utils.Paginator:
    properties:
      limit:
        type: integer
      page:
        type: integer
      query:
        type: string
      rows: {}
      sort:
        type: string
      total_pages:
        type: integer
      total_rows:
        type: integer
    type: object
info:
  contact:
    email: rmsubekti2011@gmail.com
    name: Rahmat Subekti
    url: https://bekti.net/social
  description: |-
    A snippet management service API in Go using Gin framework.
    Login to create token.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Epic Paste Service
  version: "1.0"
paths:
  /{username}:
    get:
      description: |-
        View user profile
        Bearer Token is Optional, Use bearer token to see private user
      parameters:
      - description: UserName
        example: epicpaster
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      security:
      - Bearer: []
      summary: View  user profile
      tags:
      - user
    patch:
      description: Username cannot be changed
      parameters:
      - description: UserName
        example: epicpaster
        in: path
        name: username
        required: true
        type: string
      - description: ' Body payload message/rfc822'
        in: body
        name: request
        required: true
        schema:
          example: "{\n\t\"name\": \"Epic Paster\"\n}"
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      security:
      - Bearer: []
      summary: Edit User Profile
      tags:
      - user
  /{username}/paste:
    get:
      description: |-
        Pastes can be viewed depending on logged in user
        Bearer Token is Optional, Use bearer token to see private user pastes
      parameters:
      - description: UserName
        example: epicpaster
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/utils.Paginator'
                  - properties:
                      rows:
                        items:
                          $ref: '#/definitions/model.Paste'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      security:
      - Bearer: []
      summary: View  list of paste
      tags:
      - user
  /category:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Category'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: View  all categories
      tags:
      - taxonomy
  /category/{category}:
    get:
      description: Pastes can be viewed depending on visibility status of the paste
      parameters:
      - description: show data on page n
        in: query
        name: page
        type: integer
      - description: limit items per page
        in: query
        name: limit
        type: integer
      - description: filter query
        in: query
        name: q
        type: string
      - description: Category name
        in: path
        name: category
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/utils.Paginator'
                  - properties:
                      rows:
                        items:
                          $ref: '#/definitions/model.Paste'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: Paste By Category
      tags:
      - taxonomy
  /change-email:
    patch:
      description: Need to login first
      parameters:
      - description: Body payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.Emailpayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      security:
      - Bearer: []
      summary: Change Account email
      tags:
      - account
  /change-password:
    patch:
      description: Need to login first
      parameters:
      - description: Body payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ChangePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      security:
      - Bearer: []
      summary: Change Account password
      tags:
      - account
  /login:
    post:
      description: |-
        Create new session
        user can fill the username field with their username or email
      parameters:
      - description: ' Body payload message/rfc822'
        in: body
        name: request
        required: true
        schema:
          example: "{\n\t\"username\": \"epicpaster\",\n\t\"password\": \"5uperSecret\"\n}"
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/handlers.LoginResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: Login
      tags:
      - account
  /logout:
    get:
      description: |-
        This only work with cookie.
        For JWT Token, you must set token from the respose to the frontend.
        Need to login first
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      security:
      - Bearer: []
      summary: User Account Logout
      tags:
      - account
  /paste:
    get:
      description: |-
        Pastes can be viewed depending on visibility status of the paste
        Bearer Token is Optional
      parameters:
      - description: show data on page n
        in: query
        name: page
        type: integer
      - description: limit items per page
        in: query
        name: limit
        type: integer
      - description: filter query
        in: query
        name: q
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/utils.Paginator'
                  - properties:
                      rows:
                        items:
                          $ref: '#/definitions/model.Paste'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      security:
      - Bearer: []
      summary: View  list of paste
      tags:
      - paste
    post:
      consumes:
      - application/json
      description: Currently login user can create a new paste
      parameters:
      - description: Body payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.Paste'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Paste'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      security:
      - Bearer: []
      summary: Create a new paste
      tags:
      - paste
  /paste/{id}:
    delete:
      description: Only owner can delete the paste
      parameters:
      - description: Paste ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Paste'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      security:
      - Bearer: []
      summary: Delete a paste
      tags:
      - paste
    get:
      description: |-
        Paste can be viewed depending on visibility status of the paste.
        Bearer Token is Optional
      parameters:
      - description: Paste ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Paste'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      security:
      - Bearer: []
      summary: View a paste
      tags:
      - paste
    patch:
      consumes:
      - application/json
      description: Only owner can edit the paste
      parameters:
      - description: Body payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.Paste'
      - description: Paste ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.Paste'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      security:
      - Bearer: []
      summary: Edit a paste
      tags:
      - paste
  /register:
    post:
      description: Usename cannot be changed after account is created
      parameters:
      - description: Body payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.Account'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  type: boolean
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: Register a new account
      tags:
      - account
  /syntax:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Syntax'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: View  all syntaxs
      tags:
      - taxonomy
  /syntax/{syntax}:
    get:
      description: Pastes can be viewed depending on visibility status of the paste
      parameters:
      - description: show data on page n
        in: query
        name: page
        type: integer
      - description: limit items per page
        in: query
        name: limit
        type: integer
      - description: filter query
        in: query
        name: q
        type: string
      - description: Syntax name
        in: path
        name: syntax
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/utils.Paginator'
                  - properties:
                      rows:
                        items:
                          $ref: '#/definitions/model.Paste'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: Paste By Syntax
      tags:
      - taxonomy
  /tag:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.Tag'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: View  all tags
      tags:
      - taxonomy
  /tag/{tag}:
    get:
      description: Pastes can be viewed depending on visibility status of the paste
      parameters:
      - description: show data on page n
        in: query
        name: page
        type: integer
      - description: limit items per page
        in: query
        name: limit
        type: integer
      - description: filter query
        in: query
        name: q
        type: string
      - description: Tag name
        in: path
        name: tag
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/handlers.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/utils.Paginator'
                  - properties:
                      rows:
                        items:
                          $ref: '#/definitions/model.Paste'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.Response'
      summary: Paste By Tag
      tags:
      - taxonomy
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
