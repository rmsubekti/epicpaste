name: Create Release

on:
  push:
    tags:
      - "v[0-9]+.*"

permissions:
    contents: write
    packages: write

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
  
  releases-matrix:
    needs: release # After release is created then run the second workflow
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64,arm]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm
            goos: darwin
          - goarch: arm
            goos: windows
    steps:
    - uses: actions/checkout@v3
    - run: sed '/EPIC_DEBUG/d' .env
    - uses: wangyoucao577/go-release-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "https://dl.google.com/go/go1.20.7.linux-amd64.tar.gz"
        binary_name: "epicpaste"
        extra_files: LICENSE .env
    - id: target
      run: |
        ARTIFACT=$(find  . -type d -iname "build-artifacts*")
        echo "UPLOAD_FILE=$(find $ARTIFACT -type f -iname "*tar.gz")" >> $GITHUB_ENV 
    - name: Upload Artifacts TO Google Drive
      uses: Jodebu/upload-to-drive@master
      with:
        target: ${{ env.UPLOAD_FILE }}
        credentials: ${{ secrets.GDRIVE }}
        folder: 1Y4En4SCZ7Tkkf1qD8LDfmwwWOZGAtE8a